c({"name": "can.ui.Selectable.prototype.selected", "params": {"el": {"description": "<ul>\n<li>the element to select.</li>\n</ul>", "type": "jQuery", "optional": false, "order": 0, "name": "el"}, "autoFocus": {"description": "<p>should the selected element be\nfocused.  It's focused if the user is using keyboard navigation.</p>", "type": "Boolean", "optional": true, "order": 1, "name": "autoFocus", "default": "false"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["can.ui.Selectable.prototype"], "comment": "<p>Gets or sets the selected element.</p>\n\n<p>Set the current selected element:</p>\n\n<pre><code>var selectable = new can.ui.Selectable($('#selectable'));\nselectable.selected($('.selectable:eq(1)'));\n</code></pre>\n\n<p>Get the current selected element:</p>\n\n<pre><code>selectable.selected()\n</code></pre>", "src": {"query": "", "fragment": "", "path": "canui/selectable/selectable.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}, "mkdir": {"prototype": {}}, "mkdirs": {"prototype": {}}, "exists": {"prototype": {}}, "copyTo": {"prototype": {}}, "moveTo": {"prototype": {}}, "setExecutable": {"prototype": {}}, "save": {"prototype": {}}, "download_from": {"prototype": {}}, "basename": {"prototype": {}}, "remove": {"prototype": {}}, "isFile": {"prototype": {}}, "removeDir": {"prototype": {}}, "zipDir": {"prototype": {}}, "contents": {"prototype": {}}, "pathToRoot": {"prototype": {}}}, "line": 163, "children": []})