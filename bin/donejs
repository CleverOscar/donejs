#!/usr/bin/env node
var fs = require('fs');
var path = require('path');
var program = require('commander');

var utils = require('../lib/utils');
var mypkg = require(path.join(__dirname, '..', 'package.json'));
var initDescription = 'Initialize a new DoneJS application in a new folder or the current one';

program.version(mypkg.version);

utils.projectRoot().then(function(root) {
  var donejsBinary = path.join(root, 'node_modules', '.bin', 'donejs');
  var runBinary = function(args) {
    if(!fs.existsSync(donejsBinary)) {
      console.error('Could not find local DoneJS binary (' + donejsBinary + ')');
      return;
    }
    
    return utils.spawn(donejsBinary, args, { cwd: root });
  };

  // donejs init
  program.command('init [folder]')
    .description(initDescription)
    .action(function(folder) {
      var promise = utils.mkdirp(folder).then(function(fullPath) {
        var options = { cwd: fullPath };

        return utils.spawn('npm', [ 'install', 'donejs-cli' ], options)
          .then(function() {
            var init = path.join('node_modules', '.bin', 'donejs');
            return utils.spawn(init, ['init'], options);
          });
      });

      utils.log(promise);
    });

  program.command('help')
    .description('Show all DoneJS commands available for this application')
    .action(function() {
      runBinary(['--help']);
    });

  // donejs <anything else>
  program.command('*')
    .description('Run DoneJS commands using the current DoneJS application')
    .action(function() {
      runBinary(program.rawArgs.slice(2));
    });

  program.parse(process.argv);

  if (!program.args.length) {
    program.help();
  }
});

exports.program = program;
